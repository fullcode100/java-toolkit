/*
 *  Copyright (c) 2020 - 2021 Henix, henix.fr
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestfactory.jackson.dto.v1.utils;

import org.apache.commons.lang3.StringUtils;

import java.util.Collection;
import java.util.Objects;

import static java.util.Objects.requireNonNull;

public class ValidationUtils {
  public static String requireNotBlank(String value, String name) {
    if (StringUtils.isBlank(value)) {
      throw new IllegalArgumentException(String.format("%s cannot be blank", name));
    }
    return value;
  }

  public static <T> Collection<T> requireNotEmpty(Collection<T> candidate, String name) {
    Collection<T> collection = requireNonNull(candidate, String.format("%s cannot be null", name));
    if (collection.isEmpty()) {
      throw new IllegalArgumentException(String.format("%s cannot be empty", name));
    }
    return collection;
  }
}
