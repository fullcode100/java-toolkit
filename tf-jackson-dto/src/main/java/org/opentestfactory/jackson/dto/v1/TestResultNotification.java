/*
 *  Copyright (c) 2020 - 2023 Henix, henix.fr
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestfactory.jackson.dto.v1;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import org.opentestfactory.messages.GenericNotification;

/** Subtype of notifications dedicated to send parsed results to the observer service. */
public class TestResultNotification extends GenericNotification {

  private static final String ATTACHMENT_ORIGIN = "attachment_origin";

  public final Spec spec = new Spec();

  public TestResultNotification(
      String apiVersion, String name, String workflowId, List<String> attachmentOrigin) {
    super(apiVersion, name, workflowId);
    this.addMetadata(ATTACHMENT_ORIGIN, attachmentOrigin);
  }

  public void addTestResults(Collection<TestResult> testResults) {
    this.spec.addTestResults(testResults);
  }

  public List<String> attachmentOrigin() {
    return (List<String>) this.getMetadata().get(ATTACHMENT_ORIGIN);
  }

  @JsonIgnore
  public List<TestResult> getTestResults() {
    return this.spec.testResults;
  }

  private static class Spec {
    private static final String TEST_RESULTS = "testResults";

    @JsonProperty(TEST_RESULTS)
    public final List<TestResult> testResults = new ArrayList<>();

    private void addTestResults(Collection<TestResult> testResults) {
      this.testResults.addAll(testResults);
    }
  }

  public static class TestResult {
    public final String id;
    public final String name;
    public final Status status;

    @JsonProperty(ATTACHMENT_ORIGIN)
    public final String attachmentOrigin;

    public TestResult(String id, String name, Status status, String attachmentOrigin) {
      this.id = id;
      this.name = name;
      this.status = status;
      this.attachmentOrigin = attachmentOrigin;
    }
  }

  public enum Status {
    SUCCESS,
    FAILURE,
    ERROR
  }
}
