/*
 *  Copyright (c) 2020 - 2022 Henix, henix.fr
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestfactory.jackson.dto.v1;

import java.util.List;
import java.util.Map;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

public class ExecutionResultTest extends AbstractCodecTest<ExecutionResult> {

  ExecutionResult testee;

  public ExecutionResultTest() {
    super(ExecutionResult.class);
  }

  @Before
  public void setup() {
    testee = loadFromJson("/passStatusExecutionResult.json");
  }

  @Test
  public void shouldReturnAttachmentStatusMap() {
    Map<String, ExecutionResult.AttachmentStatusDTO> actualMap = testee.attachmentStatus();
    Assert.assertEquals(3, actualMap.size());
    Assert.assertEquals("111-222-333", actualMap.get("log.html").getUuid());
  }

  @Test
  public void shouldReturnStepOriginStatusMap() {
    int expected = 1;
    int actual = testee.getNbResult("000");
    Assert.assertEquals(expected, actual);
  }

  @Test
  public void stepStatusShouldReturnEmptyListIfNoData() {
    ExecutionResult intermediateER = loadFromJson("/intermediateExecutionResult.json");
    List<ExecutionResult.StepStatusDTO> actual = intermediateER.stepOriginStatus();
    Assert.assertTrue(actual.isEmpty());
  }

  /** Some of them will still exist so we need to be prepared to accept them. */
  @Test
  public void mustTolerateUntypedExecutionResult() {
    ExecutionResult intermediateER = loadFromJson("/untypedExecutionResult.json");
    Assert.assertEquals(3, intermediateER.attachmentStatus().size());
    Assert.assertEquals(
        "444-555-666",
        intermediateER.attachmentStatus().get("src/test/resources/passing-output.xml").getUuid());
  }
}
