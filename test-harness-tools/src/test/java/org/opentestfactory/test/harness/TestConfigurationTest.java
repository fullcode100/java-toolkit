/*
 *  Copyright (c) 2020 - 2021 Henix, henix.fr
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestfactory.test.harness;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Properties;
import org.junit.Assert;
import org.junit.Test;

/** @author edegenetais */
public class TestConfigurationTest extends AbstractTestConfigurationDependentTest {
	
  @Test
  public void ifNoDurationFactorFoctorIs100() {
    int actual = new TestConfiguration(TestConfiguration.CFG_FILE_SYSTEM_PROPERTY_NAME).getDurationFactorPercent();
    Assert.assertEquals(100, actual);
  }

  @Test
  public void ifDurationFactorFactorGetIt() throws IOException {
    Properties prop = new Properties();
    try (InputStream fis = new FileInputStream(cfg)) {
      prop.load(fis);
    }
    prop.setProperty("sut.duration.factor.percent", "110");
    try (OutputStream out = new FileOutputStream(cfg)) {
      prop.store(out, "ifDurationFactorGetItTest");
    }
    int actual = new TestConfiguration(TestConfiguration.CFG_FILE_SYSTEM_PROPERTY_NAME).getDurationFactorPercent();
    Assert.assertEquals(110, actual);
  }

	@Override
	protected void setDefaultPropertiesUp(Properties prop) {/*No need for this here*/}
}
