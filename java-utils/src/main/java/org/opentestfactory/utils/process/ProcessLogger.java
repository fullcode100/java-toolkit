/*
 *  Copyright (c) 2020 - 2022 Henix, henix.fr
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestfactory.utils.process;

import org.opentestfactory.utils.shell.OutputStream;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * This class is intended to log stdout from external processes on demand.
 *
 * @author edegenetais
 */
public class ProcessLogger extends ProcessStreamListener implements Runnable {
  private final Logger logger;
  private static int counter;
  /**
   * Creates the stdout logger thread.
   *
   * @param processClass an arbitrary string to describe what kind of process is logged (will be
   *     part of the logger name)
   * @param process the process which stdout we want to log
   */
  public ProcessLogger(String processClass, Process process) {
    super(process, OutputStream.out);
    logger = LoggerFactory.getLogger("stdout." + processClass + "." + (ProcessLogger.counter++));

    if (logger.isDebugEnabled()) {
      logger.info("stdout logger daemon started");
    } else if (logger.isInfoEnabled()) {
      String name = logger.getName();
      logger.info(
          "stdout logger daemon started (switch the '"
              + name.substring(0, name.lastIndexOf('.'))
              + "' logger category to level DEBUG to see more)");
    }
  }

  /**
   * Creates the stdout logger thread.
   *
   * @param processClass an arbitrary string to describe what kind of process is logged (will be
   *     part of the logger name)
   * @param process the process which stdout we want to log
   */
  public ProcessLogger(String processClass, Process process, OutputStream targetStream) {
    super(process, targetStream);
    logger =
        LoggerFactory.getLogger(
            "std" + targetStream.name() + "." + processClass + "." + (ProcessLogger.counter++));

    if (logger.isDebugEnabled()) {
      logger.info("std" + targetStream.name() + " logger daemon started");
    } else if (logger.isInfoEnabled()) {
      String name = logger.getName();
      logger.info(
          "stdout logger daemon started (switch the '"
              + name.substring(0, name.lastIndexOf('.'))
              + "' logger category to level DEBUG to see more)");
    }
  }

  @Override
  protected void commitOutputLine(String osString) {
    logger.debug(osString);
  }
}
