/*
 *  Copyright (c) 2020 - 2022 Henix, henix.fr
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestfactory.utils.process;

/**
 * Exception thrown when an external process fails.
 *
 * @author edegenetais
 */
@SuppressWarnings("serial")
public class ExternalProcessFailure extends RuntimeException {

  private String errorStreamContent;
  private Integer returnCode;

  public ExternalProcessFailure(String message, String errorStreamContent) {
    super(message + "\n" + errorStreamContent);
    this.errorStreamContent = errorStreamContent;
  }

  public ExternalProcessFailure(String message, String errorStreamContent, Integer errorCode) {
    super(
        message
            + "\nStatus code: "
            + (errorCode == null ? "null" : errorCode.toString())
            + "\n"
            + errorStreamContent);
    this.errorStreamContent = errorStreamContent;
    this.returnCode = errorCode;
  }

  /** @return Error stream from the failed external process. */
  public String getErrorStreamContent() {
    return errorStreamContent;
  }

  /** @return Error code from the failed external process (if known). */
  public Integer getReturnCode() {
    return returnCode;
  }
}
