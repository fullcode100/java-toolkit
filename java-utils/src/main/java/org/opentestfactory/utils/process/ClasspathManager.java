/*
 *  Copyright (c) 2020 - 2023 Henix, henix.fr
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestfactory.utils.process;

import java.net.MalformedURLException;
import java.net.URL;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * This class provides functionalities to work on classpaths.
 *
 * @author edegenetais
 */
public class ClasspathManager {
  private static final Logger LOGGER = LoggerFactory.getLogger(ClasspathManager.class);

  public URL getClassCProotURL(final Class<?> targetClass) throws ClasspathException {
    String name = targetClass.getSimpleName() + ".class";
    URL u = targetClass.getResource(name);
    if ("jar".equals(u.getProtocol())) {
      try {
        String classURL = u.getFile();
        String jarURL = classURL.split("!")[0];
        LOGGER.debug(
            "Adding jar {} from the Junit plugin classpath to support default junit resource"
                + " execution.",
            jarURL);
        return new URL(jarURL);
      } catch (MalformedURLException ex) {
        throw new ClasspathException("Failed to register plugin jar URL", ex);
      }
    } else {
      throw new ClasspathException(
          "The plugin should be packaged as a JAR, other packagings are unsupported (found at "
              + u.toExternalForm()
              + ")");
    }
  }
}
