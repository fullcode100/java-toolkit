/*
 *  Copyright (c) 2020 - 2022 Henix, henix.fr
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestfactory.utils.shell;

/**
 * {@link Platform} used fully POSIX complient platforms.
 *
 * @author edegenetais
 */
public class PosixPlatform extends Platform {

  @Override
  public String getPlatformStatementSeparator() {
    return ";";
  }

  protected String changeIntoInSHellCommand(String localCommand) {
    String escapedInnerCommand = localCommand.replace("\"", "\\\"");
    return "sh -c \"" + escapedInnerCommand + "\"";
  }

  protected String prepareStatement(String query) {
    String preparedQuery = query;
    // we delete the commentaries...
    if (query.contains("#")) {
      // ... but first check the character is not escaped
      if (query.indexOf('#') > 0) {
        if (query.charAt(query.indexOf('#') - 1) != '\\') {
          preparedQuery = query.substring(0, query.indexOf('#'));
        }
      } else {
        preparedQuery = "";
      }
    }
    // we supress the blank
    preparedQuery = preparedQuery.trim();
    return preparedQuery;
  }

  @Override
  protected boolean needsShellOnPlatform(String command) {
    return false;
  }
}
