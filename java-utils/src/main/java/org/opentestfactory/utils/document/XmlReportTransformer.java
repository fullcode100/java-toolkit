/*
 *  Copyright (c) 2020 - 2023 Henix, henix.fr
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestfactory.utils.document;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Paths;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.stream.StreamResult;
import javax.xml.transform.stream.StreamSource;
import org.slf4j.LoggerFactory;

/**
 * This class contains methods that will transform a given name xml report file into another file
 * through xsl transformation.
 *
 * @author akatz
 */
public class XmlReportTransformer {

  private static final org.slf4j.Logger LOGGER =
      LoggerFactory.getLogger(XmlReportTransformer.class);

  private final URL transformURL;

  public XmlReportTransformer(String transformURL) throws MalformedURLException {
    this.transformURL = new URL(transformURL);
  }

  public void transform(String source, String destinationDirectory, String destinationFile) {
    TransformerFactory tFactory = TransformerFactory.newInstance();
    try {
      Transformer transformer =
          tFactory.newTransformer(new StreamSource(transformURL.toExternalForm()));
      Files.createDirectories(Paths.get(destinationDirectory));
      transformer.transform(
          new StreamSource(source), new StreamResult(destinationDirectory + "/" + destinationFile));
    } catch (TransformerException e) {
      LOGGER.error(
          "Unable to perform the transformation of the xml report into the target format", e);
    } catch (IOException e) {
      LOGGER.error(
          "Couldn't create a destination directory for the transformation of the xml report into a "
              + "Surefire type report",
          e);
    }
  }
}
