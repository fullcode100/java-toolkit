/*
 *  Copyright (c) 2020 - 2021 Henix, henix.fr
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestfactory.messages;

import java.util.Collections;
import java.util.Map;
import java.util.Objects;

/**
 * Workflow canceled event to cancel any pending actions in the workflow.
 *
 * @author eric
 */
public class WorkflowCanceled extends OTFMessage {

  private Map<String, Object> details;

  public WorkflowCanceled(String apiVersion, String name, String workflowId) {
    this(apiVersion, name, workflowId, Collections.emptyMap());
  }

  public WorkflowCanceled(
      String apiVersion, String name, String workflowId, Map<String, Object> details) {
    super(apiVersion);
    addMetadata(NAME_KEY, name);
    addMetadata(WORKFLOW_ID_KEY, workflowId);
    this.details =
        Objects.requireNonNull(
            details,
            "Details may not be null (use an empty collection or the alternate constructor to omit"
                + " details)");
  }

  public String name() {
    return (String) getMetadata().get(NAME_KEY);
  }

  public String workflowId() {
    return (String) getMetadata().get(WORKFLOW_ID_KEY);
  }

  public Map<String, Object> getDetails() {
    return details;
  }
}
