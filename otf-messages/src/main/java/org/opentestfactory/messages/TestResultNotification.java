/*
 *  Copyright (c) 2020 - 2023 Henix, henix.fr
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestfactory.messages;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

/** Subtype of notifications dedicated to send parsed results to the observer service. */
public class TestResultNotification extends GenericNotification {

  private final Spec spec = new Spec();

  public TestResultNotification(String apiVersion, String name, String workflowId) {
    super(apiVersion, name, workflowId);
  }

  public void addTestResults(Collection<TestResult> testResults) {
    this.spec.addTestResults(testResults);
  }

  public Spec getSpec() {
    return spec;
  }

  public static class Spec {
    private final List<TestResult> testResults;

    Spec() {
      this.testResults = new ArrayList<>();
    }

    public void addTestResults(Collection<TestResult> testResults) {
      this.testResults.addAll(testResults);
    }

    public List<TestResult> getTestResults() {
      return testResults;
    }
  }

  public enum Status {
    SUCCESS,
    FAILURE,
    ERROR
  }

  public static class TestResult {
    private final String id;
    private final String name;
    private final Status status;

    public TestResult(String id, String name, Status status) {
      this.id = id;
      this.name = name;
      this.status = status;
    }

    public String getId() {
      return id;
    }

    public String getName() {
      return name;
    }

    public Status getStatus() {
      return status;
    }
  }
}
