/*
 *  Copyright (c) 2020 - 2021 Henix, henix.fr
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestfactory.messages;

import org.junit.Assert;
import org.junit.Test;

import static org.opentestfactory.messages.AbstractMessageTest.API_VERSION;
import static org.opentestfactory.messages.ExecutionCommand.STEP_SEQUENCE_ID_KEY;

public class ExecutionCommandTest {

    @Test
    public void standardExecutionCommand() {
        final ExecutionCommand testee = new ExecutionCommand(API_VERSION);
        testee.addMetadata(STEP_SEQUENCE_ID_KEY, 0);
        Assert.assertFalse(testee.isJobStartedExecutionCommand());
        Assert.assertFalse(testee.isJobFinishedExecutionCommand());
        Assert.assertTrue(testee.isStandardExecutionCommand());
    }

    @Test
    public void jobStartedExecutionCommand() {
        final ExecutionCommand testee = new ExecutionCommand(API_VERSION);
        testee.addMetadata(STEP_SEQUENCE_ID_KEY, -1);
        Assert.assertTrue(testee.isJobStartedExecutionCommand());
        Assert.assertFalse(testee.isJobFinishedExecutionCommand());
        Assert.assertFalse(testee.isStandardExecutionCommand());
    }

    @Test
    public void jobFinishedExecutionCommand() {
        final ExecutionCommand testee = new ExecutionCommand(API_VERSION);
        testee.addMetadata(STEP_SEQUENCE_ID_KEY, -2);
        Assert.assertTrue(testee.isJobFinishedExecutionCommand());
        Assert.assertFalse(testee.isJobStartedExecutionCommand());
        Assert.assertFalse(testee.isStandardExecutionCommand());
    }
}
