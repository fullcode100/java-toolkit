/*
 *  Copyright (c) 2020 - 2021 Henix, henix.fr
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestfactory.messages;

import org.junit.Assert;
import org.junit.Test;

/** @author edegenetais */
public class AbstractWorkerNotificationTest {

  private static final AbstractWorkerNotification.WorkerState WORKER_STATE =
      new AbstractWorkerNotification.WorkerState(
          "my_id", AbstractWorkerNotification.WorkerState.Status.startup);

  @Test(expected = NullPointerException.class)
  public void doNotAcceptNullNameConstruction() {
    new AbstractWorkerNotification(
        "opentestfactory.org/v1alpha1", null, "my_workflow_id", WORKER_STATE) {};
  }

  @Test
  public void setName() {

    final String name = "name_of_my_notification";
    AbstractWorkerNotification notification =
        new AbstractWorkerNotification(
            "opentestfactory.org/v1alpha1", name, "my_workflow_id", WORKER_STATE) {};
    Assert.assertEquals(name, notification.name());
  }

  @Test(expected = NullPointerException.class)
  public void doNotAcceptNullWorkflowIdConstruction() {
    new AbstractWorkerNotification(
        "opentestfactory.org/v1alpha1", "Worker name", null, WORKER_STATE) {};
  }

  @Test
  public void setWorkflowId() {

    final String workflowId = "my_workflow_id";
    AbstractWorkerNotification notification =
        new AbstractWorkerNotification(
            "opentestfactory.org/v1alpha1", "Worker name", workflowId, WORKER_STATE) {};
    Assert.assertEquals(workflowId, notification.workflowId());
  }
}
