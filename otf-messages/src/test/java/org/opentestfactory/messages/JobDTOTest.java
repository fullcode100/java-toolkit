/*
 *  Copyright (c) 2020 - 2021 Henix, henix.fr
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestfactory.messages;

import java.util.Arrays;
import java.util.List;
import org.junit.Assert;
import org.junit.Test;

/** @author edegenetais */
public class JobDTOTest {
  private static final String RUNS_ON_OS = "linux";
  private static final String RUNS_ON_TECHNO = "robotframework";

  public static final JobDTO NO_RUNSON_JOB =
      new JobDTO(null, Arrays.asList(new AbstractStep("A step") {}), null);

  @Test
  public void nullRunsReturnsNullForSerialization() {
    Assert.assertNull(NO_RUNSON_JOB.jsonRunsOn());
  }

  @Test
  public void oneElementRunsIsStringForSerialization() {
    JobDTO testee =
        new JobDTO(
            null, Arrays.asList(new AbstractStep("A step") {}), Arrays.asList(RUNS_ON_TECHNO));
    Assert.assertEquals(RUNS_ON_TECHNO, testee.jsonRunsOn());
  }

  @Test
  public void multiElementRunsIsListForSerialization() {
    List<String> runsOn = Arrays.asList(RUNS_ON_TECHNO, RUNS_ON_OS);
    JobDTO testee = new JobDTO(null, Arrays.asList(new AbstractStep("A step") {}), runsOn);
    Assert.assertEquals(runsOn, testee.jsonRunsOn());
  }

  @Test
  public void nullRunsOnStoredAsEmptyList() {
    Assert.assertTrue(NO_RUNSON_JOB.runsOn().isEmpty());
  }
}
