/*
 *  Copyright (c) 2020 - 2022 Henix, henix.fr
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestfactory.services.components.logger;

import java.io.IOException;
import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

/**
 * This component ensure workflow context cleanup each time a worker is finished with a request -
 * even on errors.
 *
 * @author edegenetais
 */
@Component
public class WorkflowContextFilter implements Filter {

  @Override
  public void doFilter(
      final ServletRequest request, final ServletResponse response, FilterChain chain)
      throws IOException, ServletException {
    try {
      chain.doFilter(request, response);
    } finally {
      WorkflowContext.cleanWorkflowContextUp();
      LoggerFactory.getLogger(WorkflowContextFilter.class).trace("Cleaning context of workflow.");
    }
  }
}
