/*
 *  Copyright (c) 2020 - 2022 Henix, henix.fr
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestfactory.services.components.logger;

/**
 * Instances of this class are attached to threads when they perform workflow-related tasks.
 *
 * @author edegenetais
 */
public class WorkflowContext {
  private static final ThreadLocal<WorkflowContext> contextStore =
      new ThreadLocal<WorkflowContext>();

  public final String workflowId;

  public static void registerWorflowContext(WorkflowContext context) {
    contextStore.set(context);
  }

  public static void cleanWorkflowContextUp() {
    contextStore.remove();
  }

  public static WorkflowContext get() {
    return contextStore.get();
  }

  public WorkflowContext(String workflowId) {
    this.workflowId = workflowId;
  }
}
