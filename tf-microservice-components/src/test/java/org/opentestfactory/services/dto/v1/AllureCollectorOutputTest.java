/**
 *  Copyright (c) 2020 - 2021 Henix, henix.fr
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestfactory.services.dto.v1;

import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.apache.commons.io.IOUtils;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import java.io.IOException;
import java.nio.charset.Charset;

public class AllureCollectorOutputTest {

	private static final String TEST_PLAN_ID = "1234";
	private static final String ALLURE_REPORT = "path/to/allureReport";

	private AllureCollectorOutput testee;

	@Before
	public void setup() {
		try {
			String envelope = IOUtils.resourceToString("/AllureCollectorOutputTest.json", Charset.forName("UTF-8"));
			testee = new ObjectMapper(new JsonFactory()).readValue(envelope, AllureCollectorOutput.class);
		} catch (IOException ex) {
			throw new AssertionError("Failed to load expected Allure generator output envelope resource.", ex);
		}
	}

	@Test
	public void verifyTestPlanId() {
		Assert.assertEquals(TEST_PLAN_ID, testee.testPlanId());
	}

	@Test
	public void verifyAllureReport() {
		Assert.assertEquals(ALLURE_REPORT, testee.allureReport());
	}
}
