/*
 *  Copyright (c) 2020 - 2022 Henix, henix.fr
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestfactory.services.components.bus;

import com.fasterxml.jackson.core.JsonProcessingException;
import java.net.MalformedURLException;
import java.net.URL;
import javax.ws.rs.ClientErrorException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;
import org.opentestfactory.messages.StatusCode;
import org.opentestfactory.services.components.bus.subscription.Subscription;
import org.opentestfactory.services.components.bus.subscription.SubscriptionResult;
import org.slf4j.LoggerFactory;

/** @author edegenetais */
public class SubscriptionIntegrationTest {

  @Ignore
  @Test
  public void subscribeBaseInbox() throws MalformedURLException, JsonProcessingException {
    BusClient testee =
        new BusClientFactory(
                new BusClientFactoryConfiguration(new URL("http://localhost:8765"), null))
            .getBusClient();
    Subscription subscription =
        Subscription.withEndpoint("testSubscription", new URL("http://localhost:8865/inbox"));
    SubscriptionResult result;
    try {
      result = testee.subscribe(subscription);
    } catch (ClientErrorException e) {
      result = e.getResponse().readEntity(SubscriptionResult.class);
      LoggerFactory.getLogger(BusClientFactoryIntegrationTest.class)
          .error("Got error entity with details {}", result.getDetails());
    }
    Assert.assertEquals(StatusCode.CREATED.code.intValue(), result.getCode());
    Assert.assertNotNull(result.uuid());
  }
}
