/*
 *  Copyright (c) 2020 - 2022 Henix, henix.fr
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.opentestfactory.services.components.validation.testhelpers;

import org.opentestfactory.services.components.validation.ExpectedKind;

/** @author edegenetais */
public interface TestInbox {

  @ExpectedKind(value = "ValidationTestMessage")
  void inboxMethod();

  /**
   * This is to test missing jsons schema behavior, /!\ DO NOT create
   * /me/create/dont/tf2/json/schema/v1/ValidationTestMessage.json
   */
  @ExpectedKind(value = "ValidationTestMessage", apiVersion = "dont.create.me/v1")
  void inboxMethodWithMissingJsonSchema();

  @ExpectedKind(value = "ValidationTestMessage", apiVersion = "opentestfactory.org/v1beta1")
  @ExpectedKind(value = "ValidationTestMessage", apiVersion = "opentestfactory.org/v1beta2")
  void thisOneAcceptsTwoMessageKindVersions();

  /** This is here to test that non-inbox methods create no problem. */
  void thisIsNoInboxMethod();
}
